{"version":3,"sources":["webpack:///./src/styles/pages/blog.js","webpack:///./src/pages/blog/index.js"],"names":["title","spoiler","Blog","data","posts","allMarkdownRemark","siteMetadata","site","React","useEffect","document","querySelector","setAttribute","className","author","description","tagline","HeaderBlog","edges","map","node","ItemPost","key","id","frontmatter","timeToRead","path","date","Fragment","css","styles","to","query"],"mappings":"2JAEaA,EAAK,6EAMLC,EAAO,uC,+MCDL,SAASC,EAAT,GAAyB,IAATC,EAAQ,EAARA,KACAC,EAAgBD,EAAnCE,kBACAC,EADmCH,EAATI,KAC1BD,aAMR,OAJAE,IAAMC,WAAU,WACZC,SAASC,cAAc,QAAQC,aAAa,QAAS,iBACtD,IAGC,mBAAKC,UAAU,aACX,YAAC,IAAD,CACIb,MAAUM,EAAaQ,OAAlB,sCACLC,YAAaT,EAAaU,UAE9B,YAACC,EAAA,EAAD,MACCb,EAAMc,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACb,YAACC,EAAD,GAAUC,IAAKF,EAAKG,IAAQH,QAM5C,SAASC,EAAT,GAAgD,IAA5BG,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,WACrBzB,EAA+BwB,EAA/BxB,MAAO0B,EAAwBF,EAAxBE,KAAMzB,EAAkBuB,EAAlBvB,QAAS0B,EAASH,EAATG,KAE9B,OACI,YAAC,IAAMC,SAAP,KACI,kBAAIC,IAAKC,GACL,YAAC,IAAD,CAAMC,GAAIL,GAAO1B,IAErB,yBACI,0BAAS2B,GADb,MAC+BF,EAD/B,aAGA,iBAAGI,IAAKC,GAAiB7B,I,8EAK9B,IAAM+B,EAAK","file":"component---src-pages-blog-index-js-0135ab029eea634f3195.js","sourcesContent":["import { css } from '@emotion/core'\r\n\r\nexport const title = css`\r\n  font-size: 30px;\r\n  margin-bottom: 0.5rem;\r\n  color: #43d0e1;\r\n`\r\n\r\nexport const spoiler = css`\r\n  margin-top: 0;\r\n`\r\n","import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\n\r\nimport SEO from '../../components/seo'\r\nimport { HeaderBlog } from '../../components/Header/HeaderBlog'\r\nimport * as styles from '../../styles/pages/blog'\r\n\r\nexport default function Blog({ data }) {\r\n    const { allMarkdownRemark: posts, site } = data\r\n    const { siteMetadata } = site\r\n\r\n    React.useEffect(() => {\r\n        document.querySelector('html').setAttribute('class', 'layout-blog')\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <SEO\r\n                title={`${siteMetadata.author} â€” A personal blog by Verdi Pratama`}\r\n                description={siteMetadata.tagline}\r\n            />\r\n            <HeaderBlog />\r\n            {posts.edges.map(({ node }) => (\r\n                <ItemPost key={node.id} {...node} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ItemPost({ frontmatter, timeToRead }) {\r\n    const { title, path, spoiler, date } = frontmatter\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h3 css={styles.title}>\r\n                <Link to={path}>{title}</Link>\r\n            </h3>\r\n            <small>\r\n                <strong>{date}</strong> | {timeToRead} min read\r\n            </small>\r\n            <p css={styles.spoiler}>{spoiler}</p>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport const query = graphql`\r\n    query {\r\n        allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    frontmatter {\r\n                        title\r\n                        path\r\n                        date(formatString: \"DD MMM YYYY\")\r\n                        spoiler\r\n                    }\r\n                    timeToRead\r\n                }\r\n            }\r\n        }\r\n        site {\r\n            siteMetadata {\r\n                author\r\n                tagline\r\n            }\r\n        }\r\n    }\r\n`\r\n"],"sourceRoot":""}